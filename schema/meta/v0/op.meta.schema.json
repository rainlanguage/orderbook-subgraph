{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/OpMeta",
  "$comment": "v0.0.1",
  "definitions": {
    "OpMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Opcode Name",
          "description": "The primary word used to identify the opcode.",
          "pattern": "^[a-z][0-9a-z-]*$"
        },
        "desc": {
          "type": "string",
          "title": "Opcode Description",
          "description": "Describes what the opcode does briefly."
        },
        "operand": {
          "$ref": "#/definitions/OperandMeta",
          "title": "Opcode Operand",
          "description": "Data required in order to calculate and format the operand."
        },
        "inputs": {
          "$ref": "#/definitions/InputMeta",
          "title": "Opcode Inputs",
          "description": "Data required to specify the inputs of the opcode. 0 for opcodes with no input, for opcodes with constant number of inputs, the length of \"parameters\" array defines the number of inputs and for opcodes with dynamic number of inputs, \"bits\" field must be specified which determines this opcode has dynamic inputs and number of inputs will be derived from the operand bits with \"computation\" field applied if specified."
        },
        "outputs": {
          "$ref": "#/definitions/OutputMeta",
          "title": "Opcode Outputs",
          "description": "Data required to specify the outputs of the opcode. An integer specifies the number of outputs for opcodes with constants number of outputs and for opcodes with dynamic outputs the \"bits\" field will determine the number of outputs with \"computation\" field applied if specified."
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-z][0-9a-z-]*$"
          },
          "title": "Opcode Aliases",
          "description": "Extra word used to identify the opcode."
        }
      },
      "required": ["name", "desc", "operand", "inputs", "outputs"],
      "additionalProperties": false,
      "title": "Opcode Metadata",
      "description": "Schema for opcodes metadata used by RainLang."
    },
    "OperandMeta": {
      "anyOf": [
        {
          "type": "integer",
          "const": 0
        },
        {
          "$ref": "#/definitions/OperandArgs"
        }
      ]
    },
    "OperandArgs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "bits": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 15
            },
            "minItems": 2,
            "maxItems": 2,
            "title": "Allocated Operand Bits",
            "description": "Specifies the bits to allocate to this operand argument."
          },
          "name": {
            "type": "string",
            "title": "Operand Argument Name",
            "description": "Name of the operand argument. Argument with the name of \"inputs\" is reserved so that it wont be be typed inside <> and its value needed to construct the operand will be the number of items inside the opcode's parens (computation will apply to this value if provided).",
            "pattern": "^[a-z][0-9a-z-]*$"
          },
          "desc": {
            "type": "string",
            "title": "Operand Argument Description",
            "description": "Description of the operand argument."
          },
          "computation": {
            "type": "string",
            "title": "Allocated Operand Bits Computation",
            "description": "Specifies any arithmetical operation that needs to be applied to the value of this operand argument. It will apply to the value before it be validated by the provided range. The \"arg\" keyword is reserved for accessing the value of this operand argument, example: \"(arg + 1) * 2\"."
          },
          "validRange": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "minItems": 1,
                  "maxItems": 1
                },
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              ]
            },
            "title": "Operand Argument Range",
            "description": "Determines the valid range of the operand argument after computation applied. For example an operand argument can be any value between range of 1 - 10: [[1, 10]] or an operand argument can only be certain exact values: [[2], [3], [9]], meaning it can only be 2 or 3 or 9."
          }
        },
        "required": ["bits", "name"],
        "additionalProperties": false
      },
      "minItems": 1
    },
    "InputMeta": {
      "anyOf": [
        {
          "type": "integer",
          "const": 0
        },
        {
          "$ref": "#/definitions/InputArgs"
        }
      ]
    },
    "InputArgs": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "title": "Input Parameter Name",
                "description": "Name of the input parameter.",
                "pattern": "^[a-z][0-9a-z-]*$"
              },
              "desc": {
                "type": "string",
                "title": "Input Parameter Description",
                "description": "Description of the input parameter."
              },
              "spread": {
                "type": "boolean",
                "title": "Parameter Spread",
                "description": "Specifies if an argument is dynamic in length, default is false, so only needs to be defined if an argument is spread."
              }
            },
            "required": ["name"],
            "additionalProperties": false
          },
          "title": "Parameters",
          "description": "Data type for opcode's inputs parameters, the length determines the number of inputs for constant (non-computed) inputs."
        },
        "bits": {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0,
            "maximum": 15
          },
          "minItems": 2,
          "maxItems": 2,
          "title": "Inputs-Allocated Operand Bits",
          "description": "Specifies bits of the operand allocated for number of inputs. Determines the number of inputs for a computed opcode inputs. Required only for computed (non-constant) inputs."
        },
        "computation": {
          "type": "string",
          "title": "Inputs-Allocated Operand Bits Computation",
          "description": "Specifies any arithmetical operation that will be applied to the value of the extracted operand bits. The \"bits\" keyword is reserved for accessing the exctraced value, example: \"(bits + 1) * 2\". Required only for computed (non-constant) inputs."
        }
      },
      "required": ["parameters"],
      "additionalProperties": false
    },
    "OutputMeta": {
      "anyOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "$ref": "#/definitions/ComputedOutput"
        }
      ]
    },
    "ComputedOutput": {
      "type": "object",
      "properties": {
        "bits": {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0,
            "maximum": 15
          },
          "minItems": 2,
          "maxItems": 2,
          "title": "Outputs-Allocated Operand Bits",
          "description": "Specifies bits of the operand allocated for number of outputs. Determines the number of outputs for a computed opcode outputs. Required only for computed (non-constant) outputs."
        },
        "computation": {
          "type": "string",
          "title": "Outputs-Allocated Operand Bits Computation",
          "description": "Specifies any arithmetical operation that will be applied to the value of the extracted operand bits. The \"bits\" keyword is reserved for accessing the exctraced value, example: \"(bits + 1) * 2\". Required only for computed (non-constant) outputs."
        }
      },
      "required": ["bits"],
      "additionalProperties": false
    }
  }
}
