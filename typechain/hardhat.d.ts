/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC4626Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4626Upgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC1155BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155BurnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ERC1155HolderUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155HolderUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "ERC20BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20BurnableUpgradeable__factory>;
    getContractFactory(
      name: "ERC20SnapshotUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20SnapshotUpgradeable__factory>;
    getContractFactory(
      name: "ERC4626Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC4626Upgradeable__factory>;
    getContractFactory(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BurnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721HolderUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721HolderUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC1820RegistryUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1820RegistryUpgradeable__factory>;
    getContractFactory(
      name: "MulticallUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MulticallUpgradeable__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "SeedDance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeedDance__factory>;
    getContractFactory(
      name: "LibDebug",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDebug__factory>;
    getContractFactory(
      name: "ERC20Redeem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Redeem__factory>;
    getContractFactory(
      name: "RedeemableERC20ClaimEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RedeemableERC20ClaimEscrow__factory>;
    getContractFactory(
      name: "Extrospection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Extrospection__factory>;
    getContractFactory(
      name: "CloneFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CloneFactory__factory>;
    getContractFactory(
      name: "Flow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Flow__factory>;
    getContractFactory(
      name: "FlowERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlowERC1155__factory>;
    getContractFactory(
      name: "FlowERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlowERC20__factory>;
    getContractFactory(
      name: "FlowERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlowERC721__factory>;
    getContractFactory(
      name: "FlowCommon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlowCommon__factory>;
    getContractFactory(
      name: "EIP5313",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP5313__factory>;
    getContractFactory(
      name: "DeployerDiscoverableMetaV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DeployerDiscoverableMetaV1__factory>;
    getContractFactory(
      name: "Rainterpreter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Rainterpreter__factory>;
    getContractFactory(
      name: "RainterpreterExpressionDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RainterpreterExpressionDeployer__factory>;
    getContractFactory(
      name: "RainterpreterExtern",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RainterpreterExtern__factory>;
    getContractFactory(
      name: "RainterpreterStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RainterpreterStore__factory>;
    getContractFactory(
      name: "Lobby",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lobby__factory>;
    getContractFactory(
      name: "OrderBook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrderBook__factory>;
    getContractFactory(
      name: "OrderBookFlashLender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrderBookFlashLender__factory>;
    getContractFactory(
      name: "Phased",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Phased__factory>;
    getContractFactory(
      name: "RedeemableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RedeemableERC20__factory>;
    getContractFactory(
      name: "Sale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Sale__factory>;
    getContractFactory(
      name: "Stake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Stake__factory>;
    getContractFactory(
      name: "LibCommitmentTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibCommitmentTest__factory>;
    getContractFactory(
      name: "LibSeedTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibSeedTest__factory>;
    getContractFactory(
      name: "SeedDanceTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeedDanceTest__factory>;
    getContractFactory(
      name: "EIP165InterfaceIds",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP165InterfaceIds__factory>;
    getContractFactory(
      name: "ERC3156FlashBorrowerBuyTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3156FlashBorrowerBuyTest__factory>;
    getContractFactory(
      name: "ERC3156FlashBorrowerDepositTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3156FlashBorrowerDepositTest__factory>;
    getContractFactory(
      name: "ERC3156FlashBorrowerMaxLoan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3156FlashBorrowerMaxLoan__factory>;
    getContractFactory(
      name: "ERC3156FlashBorrowerTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3156FlashBorrowerTest__factory>;
    getContractFactory(
      name: "ERC3156FlashBorrowerTestReentrancy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3156FlashBorrowerTestReentrancy__factory>;
    getContractFactory(
      name: "ERC3156FlashBorrowerWithdrawTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3156FlashBorrowerWithdrawTest__factory>;
    getContractFactory(
      name: "RedeemableERC20ClaimEscrowWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RedeemableERC20ClaimEscrowWrapper__factory>;
    getContractFactory(
      name: "SaleEscrowWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SaleEscrowWrapper__factory>;
    getContractFactory(
      name: "ReserveTokenOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveTokenOwner__factory>;
    getContractFactory(
      name: "LibIntegrityCheckTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibIntegrityCheckTest__factory>;
    getContractFactory(
      name: "IInterpreterCallerConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInterpreterCallerConsumer__factory>;
    getContractFactory(
      name: "IInterpreterV1Consumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInterpreterV1Consumer__factory>;
    getContractFactory(
      name: "LibInterpreterStateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibInterpreterStateTest__factory>;
    getContractFactory(
      name: "LibStackPointerTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibStackPointerTest__factory>;
    getContractFactory(
      name: "LibMemoryKVTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibMemoryKVTest__factory>;
    getContractFactory(
      name: "LobbyReentrantReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LobbyReentrantReceiver__factory>;
    getContractFactory(
      name: "LobbyReentrantSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LobbyReentrantSender__factory>;
    getContractFactory(
      name: "LibFixedPointMathTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibFixedPointMathTest__factory>;
    getContractFactory(
      name: "RandomTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RandomTest__factory>;
    getContractFactory(
      name: "LibMemorySizeTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibMemorySizeTest__factory>;
    getContractFactory(
      name: "OBMultiTx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OBMultiTx__factory>;
    getContractFactory(
      name: "PhasedScheduleTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PhasedScheduleTest__factory>;
    getContractFactory(
      name: "PhasedTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PhasedTest__factory>;
    getContractFactory(
      name: "ERC20PulleeTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PulleeTest__factory>;
    getContractFactory(
      name: "RedeemableERC20Reentrant",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RedeemableERC20Reentrant__factory>;
    getContractFactory(
      name: "MockISaleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockISaleV2__factory>;
    getContractFactory(
      name: "SaleReentrant",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SaleReentrant__factory>;
    getContractFactory(
      name: "ReserveToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveToken__factory>;
    getContractFactory(
      name: "ReserveToken18",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveToken18__factory>;
    getContractFactory(
      name: "ReserveTokenDecimals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveTokenDecimals__factory>;
    getContractFactory(
      name: "ReserveTokenERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveTokenERC1155__factory>;
    getContractFactory(
      name: "ReserveTokenERC20Snapshot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveTokenERC20Snapshot__factory>;
    getContractFactory(
      name: "ReserveTokenERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveTokenERC721__factory>;
    getContractFactory(
      name: "ReserveTokenTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveTokenTest__factory>;
    getContractFactory(
      name: "ReportOMeter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReportOMeter__factory>;
    getContractFactory(
      name: "TierReportTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TierReportTest__factory>;
    getContractFactory(
      name: "ReadWriteTier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReadWriteTier__factory>;
    getContractFactory(
      name: "TierV2Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TierV2Test__factory>;
    getContractFactory(
      name: "LibEvidenceTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibEvidenceTest__factory>;
    getContractFactory(
      name: "VerifyCallbackTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VerifyCallbackTest__factory>;
    getContractFactory(
      name: "CombineTier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CombineTier__factory>;
    getContractFactory(
      name: "ITierV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITierV2__factory>;
    getContractFactory(
      name: "TierV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TierV2__factory>;
    getContractFactory(
      name: "AutoApprove",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AutoApprove__factory>;
    getContractFactory(
      name: "IVerifyCallbackV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVerifyCallbackV1__factory>;
    getContractFactory(
      name: "IVerifyV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVerifyV1__factory>;
    getContractFactory(
      name: "Verify",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verify__factory>;
    getContractFactory(
      name: "VerifyCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VerifyCallback__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "Cooldown",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Cooldown__factory>;
    getContractFactory(
      name: "ICloneableV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICloneableV1__factory>;
    getContractFactory(
      name: "ICloneableFactoryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICloneableFactoryV1__factory>;
    getContractFactory(
      name: "IFlowERC1155V3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlowERC1155V3__factory>;
    getContractFactory(
      name: "IFlowERC20V3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlowERC20V3__factory>;
    getContractFactory(
      name: "IFlowERC721V3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlowERC721V3__factory>;
    getContractFactory(
      name: "IFlowV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlowV3__factory>;
    getContractFactory(
      name: "IInterpreterCallerV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInterpreterCallerV1__factory>;
    getContractFactory(
      name: "IExpressionDeployerV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExpressionDeployerV1__factory>;
    getContractFactory(
      name: "IInterpreterCallerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInterpreterCallerV2__factory>;
    getContractFactory(
      name: "IInterpreterExternV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInterpreterExternV1__factory>;
    getContractFactory(
      name: "IInterpreterStoreV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInterpreterStoreV1__factory>;
    getContractFactory(
      name: "IInterpreterV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInterpreterV1__factory>;
    getContractFactory(
      name: "IDebugExpressionDeployerV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDebugExpressionDeployerV1__factory>;
    getContractFactory(
      name: "IDebugInterpreterV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDebugInterpreterV1__factory>;
    getContractFactory(
      name: "IERC3156FlashBorrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3156FlashBorrower__factory>;
    getContractFactory(
      name: "IERC3156FlashLender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3156FlashLender__factory>;
    getContractFactory(
      name: "IOrderBookV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOrderBookV2__factory>;
    getContractFactory(
      name: "ISaleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISaleV2__factory>;
    getContractFactory(
      name: "IMetaV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetaV1__factory>;

    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC4626Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4626Upgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "ERC1155BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155BurnableUpgradeable>;
    getContractAt(
      name: "IERC1155MetadataURIUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "ERC1155HolderUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155HolderUpgradeable>;
    getContractAt(
      name: "ERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "IERC20PermitUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    getContractAt(
      name: "ERC20BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20BurnableUpgradeable>;
    getContractAt(
      name: "ERC20SnapshotUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20SnapshotUpgradeable>;
    getContractAt(
      name: "ERC4626Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC4626Upgradeable>;
    getContractAt(
      name: "IERC20MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BurnableUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ERC721HolderUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721HolderUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "IERC1820RegistryUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1820RegistryUpgradeable>;
    getContractAt(
      name: "MulticallUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MulticallUpgradeable>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "SeedDance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeedDance>;
    getContractAt(
      name: "LibDebug",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDebug>;
    getContractAt(
      name: "ERC20Redeem",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Redeem>;
    getContractAt(
      name: "RedeemableERC20ClaimEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RedeemableERC20ClaimEscrow>;
    getContractAt(
      name: "Extrospection",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Extrospection>;
    getContractAt(
      name: "CloneFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CloneFactory>;
    getContractAt(
      name: "Flow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Flow>;
    getContractAt(
      name: "FlowERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlowERC1155>;
    getContractAt(
      name: "FlowERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlowERC20>;
    getContractAt(
      name: "FlowERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlowERC721>;
    getContractAt(
      name: "FlowCommon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlowCommon>;
    getContractAt(
      name: "EIP5313",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP5313>;
    getContractAt(
      name: "DeployerDiscoverableMetaV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DeployerDiscoverableMetaV1>;
    getContractAt(
      name: "Rainterpreter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Rainterpreter>;
    getContractAt(
      name: "RainterpreterExpressionDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RainterpreterExpressionDeployer>;
    getContractAt(
      name: "RainterpreterExtern",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RainterpreterExtern>;
    getContractAt(
      name: "RainterpreterStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RainterpreterStore>;
    getContractAt(
      name: "Lobby",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Lobby>;
    getContractAt(
      name: "OrderBook",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OrderBook>;
    getContractAt(
      name: "OrderBookFlashLender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OrderBookFlashLender>;
    getContractAt(
      name: "Phased",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Phased>;
    getContractAt(
      name: "RedeemableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RedeemableERC20>;
    getContractAt(
      name: "Sale",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Sale>;
    getContractAt(
      name: "Stake",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Stake>;
    getContractAt(
      name: "LibCommitmentTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibCommitmentTest>;
    getContractAt(
      name: "LibSeedTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibSeedTest>;
    getContractAt(
      name: "SeedDanceTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeedDanceTest>;
    getContractAt(
      name: "EIP165InterfaceIds",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP165InterfaceIds>;
    getContractAt(
      name: "ERC3156FlashBorrowerBuyTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3156FlashBorrowerBuyTest>;
    getContractAt(
      name: "ERC3156FlashBorrowerDepositTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3156FlashBorrowerDepositTest>;
    getContractAt(
      name: "ERC3156FlashBorrowerMaxLoan",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3156FlashBorrowerMaxLoan>;
    getContractAt(
      name: "ERC3156FlashBorrowerTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3156FlashBorrowerTest>;
    getContractAt(
      name: "ERC3156FlashBorrowerTestReentrancy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3156FlashBorrowerTestReentrancy>;
    getContractAt(
      name: "ERC3156FlashBorrowerWithdrawTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3156FlashBorrowerWithdrawTest>;
    getContractAt(
      name: "RedeemableERC20ClaimEscrowWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RedeemableERC20ClaimEscrowWrapper>;
    getContractAt(
      name: "SaleEscrowWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SaleEscrowWrapper>;
    getContractAt(
      name: "ReserveTokenOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveTokenOwner>;
    getContractAt(
      name: "LibIntegrityCheckTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibIntegrityCheckTest>;
    getContractAt(
      name: "IInterpreterCallerConsumer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInterpreterCallerConsumer>;
    getContractAt(
      name: "IInterpreterV1Consumer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInterpreterV1Consumer>;
    getContractAt(
      name: "LibInterpreterStateTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibInterpreterStateTest>;
    getContractAt(
      name: "LibStackPointerTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibStackPointerTest>;
    getContractAt(
      name: "LibMemoryKVTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibMemoryKVTest>;
    getContractAt(
      name: "LobbyReentrantReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LobbyReentrantReceiver>;
    getContractAt(
      name: "LobbyReentrantSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LobbyReentrantSender>;
    getContractAt(
      name: "LibFixedPointMathTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibFixedPointMathTest>;
    getContractAt(
      name: "RandomTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RandomTest>;
    getContractAt(
      name: "LibMemorySizeTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibMemorySizeTest>;
    getContractAt(
      name: "OBMultiTx",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OBMultiTx>;
    getContractAt(
      name: "PhasedScheduleTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PhasedScheduleTest>;
    getContractAt(
      name: "PhasedTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PhasedTest>;
    getContractAt(
      name: "ERC20PulleeTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PulleeTest>;
    getContractAt(
      name: "RedeemableERC20Reentrant",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RedeemableERC20Reentrant>;
    getContractAt(
      name: "MockISaleV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockISaleV2>;
    getContractAt(
      name: "SaleReentrant",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SaleReentrant>;
    getContractAt(
      name: "ReserveToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveToken>;
    getContractAt(
      name: "ReserveToken18",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveToken18>;
    getContractAt(
      name: "ReserveTokenDecimals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveTokenDecimals>;
    getContractAt(
      name: "ReserveTokenERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveTokenERC1155>;
    getContractAt(
      name: "ReserveTokenERC20Snapshot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveTokenERC20Snapshot>;
    getContractAt(
      name: "ReserveTokenERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveTokenERC721>;
    getContractAt(
      name: "ReserveTokenTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveTokenTest>;
    getContractAt(
      name: "ReportOMeter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReportOMeter>;
    getContractAt(
      name: "TierReportTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TierReportTest>;
    getContractAt(
      name: "ReadWriteTier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReadWriteTier>;
    getContractAt(
      name: "TierV2Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TierV2Test>;
    getContractAt(
      name: "LibEvidenceTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibEvidenceTest>;
    getContractAt(
      name: "VerifyCallbackTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VerifyCallbackTest>;
    getContractAt(
      name: "CombineTier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CombineTier>;
    getContractAt(
      name: "ITierV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITierV2>;
    getContractAt(
      name: "TierV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TierV2>;
    getContractAt(
      name: "AutoApprove",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AutoApprove>;
    getContractAt(
      name: "IVerifyCallbackV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVerifyCallbackV1>;
    getContractAt(
      name: "IVerifyV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVerifyV1>;
    getContractAt(
      name: "Verify",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verify>;
    getContractAt(
      name: "VerifyCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VerifyCallback>;
    getContractAt(
      name: "IERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "Cooldown",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Cooldown>;
    getContractAt(
      name: "ICloneableV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICloneableV1>;
    getContractAt(
      name: "ICloneableFactoryV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICloneableFactoryV1>;
    getContractAt(
      name: "IFlowERC1155V3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlowERC1155V3>;
    getContractAt(
      name: "IFlowERC20V3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlowERC20V3>;
    getContractAt(
      name: "IFlowERC721V3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlowERC721V3>;
    getContractAt(
      name: "IFlowV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlowV3>;
    getContractAt(
      name: "IInterpreterCallerV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInterpreterCallerV1>;
    getContractAt(
      name: "IExpressionDeployerV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExpressionDeployerV1>;
    getContractAt(
      name: "IInterpreterCallerV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInterpreterCallerV2>;
    getContractAt(
      name: "IInterpreterExternV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInterpreterExternV1>;
    getContractAt(
      name: "IInterpreterStoreV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInterpreterStoreV1>;
    getContractAt(
      name: "IInterpreterV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInterpreterV1>;
    getContractAt(
      name: "IDebugExpressionDeployerV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDebugExpressionDeployerV1>;
    getContractAt(
      name: "IDebugInterpreterV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDebugInterpreterV1>;
    getContractAt(
      name: "IERC3156FlashBorrower",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3156FlashBorrower>;
    getContractAt(
      name: "IERC3156FlashLender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3156FlashLender>;
    getContractAt(
      name: "IOrderBookV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOrderBookV2>;
    getContractAt(
      name: "ISaleV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISaleV2>;
    getContractAt(
      name: "IMetaV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetaV1>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
