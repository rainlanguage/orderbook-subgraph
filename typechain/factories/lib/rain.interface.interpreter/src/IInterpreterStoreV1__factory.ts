/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IInterpreterStoreV1,
  IInterpreterStoreV1Interface,
} from "../../../../lib/rain.interface.interpreter/src/IInterpreterStoreV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "FullyQualifiedNamespace",
        name: "namespace",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StateNamespace",
        name: "namespace",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "kvs",
        type: "uint256[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IInterpreterStoreV1__factory {
  static readonly abi = _abi;
  static createInterface(): IInterpreterStoreV1Interface {
    return new utils.Interface(_abi) as IInterpreterStoreV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInterpreterStoreV1 {
    return new Contract(address, _abi, signerOrProvider) as IInterpreterStoreV1;
  }
}
