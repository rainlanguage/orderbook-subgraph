/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RainterpreterExtern,
  RainterpreterExternInterface,
} from "../../../../contracts/interpreter/shared/RainterpreterExtern";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "BadInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    name: "NotPosIntPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "staleAfter",
        type: "uint256",
      },
    ],
    name: "StalePrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opcode",
        type: "uint256",
      },
    ],
    name: "UnknownOp",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "ExternDispatch",
        name: "dispatch_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "inputs_",
        type: "uint256[]",
      },
    ],
    name: "extern",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a75806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063b65ad68314610063575b600080fd5b61004e61004936600461065c565b610083565b60405190151581526020015b60405180910390f35b6100766100713660046106cd565b61011c565b60405161005a91906107b5565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb65ad68300000000000000000000000000000000000000000000000000000000148061011657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060815160021461016b5781516040517f98158f020000000000000000000000000000000000000000000000000000000081526002600482015260248101919091526044015b60405180910390fd5b8151602090810283010161ffff601085901c16606060008290036101e0576101d96101c161019b8561021e610231565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015190565b60408051600181526020810192909252818101905290565b9050610215565b6040517ffc6024cf00000000000000000000000000000000000000000000000000000000815260048101839052602401610162565b95945050505050565b600061022a838361029d565b9392505050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0820180517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090930180519093600092909190610292838363ffffffff8816565b905250929392505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103119190610818565b5093505092505060008213610355576040517f3351e26f00000000000000000000000000000000000000000000000000000000815260048101839052602401610162565b836103608242610897565b11156103a2576040517f2730eb480000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604401610162565b6102158573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906108aa565b60ff16600161042285610429565b9190610499565b600080821215610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401610162565b5090565b600082601211156104ce57601283900360028316156104c4576104bc858261051f565b91505061022a565b6104bc85826105af565b6012831115610517577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee8301600183161561050d576104bc85826105e7565b6104bc8582610639565b509192915050565b6000604e821061055f578215610555577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610558565b60005b9050610116565b50600a81900a8281029083818381610579576105796108cd565b04146105a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6105a7565b815b949350505050565b600a81900a6105be81846108fc565b9050604e82106101165782156105de576105d982600a610a33565b61022a565b50600092915050565b6000604e821061060b5782156105fe576001610601565b60005b60ff169050610116565b600a82900a80848161061f5761061f6108cd565b0491508082028414610632576001820191505b5092915050565b6000604e8210156105de5781600a0a8381610656576106566108cd565b0461022a565b60006020828403121561066e57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461022a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156106e057600080fd5b8235915060208084013567ffffffffffffffff8082111561070057600080fd5b818601915086601f83011261071457600080fd5b8135818111156107265761072661069e565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156107695761076961069e565b60405291825284820192508381018501918983111561078757600080fd5b938501935b828510156107a55784358452938501939285019261078c565b8096505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b818110156107ed578351835292840192918401916001016107d1565b50909695505050505050565b805169ffffffffffffffffffff8116811461081357600080fd5b919050565b600080600080600060a0868803121561083057600080fd5b610839866107f9565b945060208601519350604086015192506060860151915061085c608087016107f9565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561011657610116610868565b6000602082840312156108bc57600080fd5b815160ff8116811461022a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b808202811582820484141761011657610116610868565b600181815b8085111561096c57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561095257610952610868565b8085161561095f57918102915b93841c9390800290610918565b509250929050565b60008261098357506001610116565b8161099057506000610116565b81600181146109a657600281146109b0576109cc565b6001915050610116565b60ff8411156109c1576109c1610868565b50506001821b610116565b5060208310610133831016604e8410600b84101617156109ef575081810a610116565b6109f98383610913565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610a2b57610a2b610868565b029392505050565b600061022a838361097456fea2646970667358221220115b41f8237aa8c661449b30249ae77b16a40dbdc9d3af1117cbec677bb3198664736f6c63430008130033";

type RainterpreterExternConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RainterpreterExternConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RainterpreterExtern__factory extends ContractFactory {
  constructor(...args: RainterpreterExternConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RainterpreterExtern> {
    return super.deploy(overrides || {}) as Promise<RainterpreterExtern>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RainterpreterExtern {
    return super.attach(address) as RainterpreterExtern;
  }
  override connect(signer: Signer): RainterpreterExtern__factory {
    return super.connect(signer) as RainterpreterExtern__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RainterpreterExternInterface {
    return new utils.Interface(_abi) as RainterpreterExternInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RainterpreterExtern {
    return new Contract(address, _abi, signerOrProvider) as RainterpreterExtern;
  }
}
