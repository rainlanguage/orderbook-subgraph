/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  IInterpreterV1Consumer,
  IInterpreterV1ConsumerInterface,
} from "../../../../../contracts/test/interpreter/runtime/IInterpreterV1Consumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IInterpreterV1",
        name: "interpreter_",
        type: "address",
      },
      {
        internalType: "EncodedDispatch",
        name: "dispatch_",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "context_",
        type: "uint256[][]",
      },
    ],
    name: "eval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInterpreterV1",
        name: "interpreter_",
        type: "address",
      },
      {
        internalType: "contract IInterpreterStoreV1",
        name: "store_",
        type: "address",
      },
      {
        internalType: "EncodedDispatch",
        name: "dispatch_",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "context_",
        type: "uint256[][]",
      },
    ],
    name: "eval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInterpreterV1",
        name: "interpreter_",
        type: "address",
      },
      {
        internalType: "contract IInterpreterStoreV1",
        name: "store_",
        type: "address",
      },
      {
        internalType: "StateNamespace",
        name: "namespace_",
        type: "uint256",
      },
      {
        internalType: "EncodedDispatch",
        name: "dispatch_",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "context_",
        type: "uint256[][]",
      },
    ],
    name: "evalWithNamespace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kvs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInterpreterStoreV1",
        name: "store_",
        type: "address",
      },
      {
        internalType: "StateNamespace",
        name: "namespace_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "kvs_",
        type: "uint256[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IInterpreterStoreV1",
        name: "store_",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "kvs_",
        type: "uint256[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stack",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stackTop",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "store",
    outputs: [
      {
        internalType: "contract IInterpreterStoreV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c81806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806387650f1711610076578063a19a19981161005b578063a19a199814610131578063b02bc7ae14610144578063b9e62b741461015757600080fd5b806387650f17146100f6578063975057e71461010957600080fd5b8063138ef151146100a8578063313e3e91146100c657806366ee8357146100ce5780636d41a69a146100e3575b600080fd5b6100b061016d565b6040516100bd9190610619565b60405180910390f35b6100b06101c5565b6100e16100dc3660046107e5565b61021b565b005b6100e16100f136600461083e565b61022e565b6100e161010436600461088d565b610310565b60015460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bd565b6100e161013f3660046108f9565b610324565b6100e161015236600461096f565b61048f565b61015f61049f565b6040519081526020016100bd565b606060008054806020026020016040519081016040528092919081815260200182805480156101bb57602002820191906000526020600020905b8154815260200190600101908083116101a7575b5050505050905090565b606060028054806020026020016040519081016040528092919081815260200182805480156101bb57602002820191906000526020600020908154815260200190600101908083116101a7575050505050905090565b610229836000808585610324565b505050565b60005a6040517f946aadc600000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff85169063946aadc69061028890869086906004016109bf565b600060405180830381600087803b1580156102a257600080fd5b505af11580156102b6573d6000803e3d6000fd5b5050505060005a90506103096040518060400160405280600781526020017f7365742067617300000000000000000000000000000000000000000000000000815250828461030491906109e0565b6104d1565b5050505050565b61031e848460008585610324565b50505050565b60005a90506000808773ffffffffffffffffffffffffffffffffffffffff16636715f825888888886040518563ffffffff1660e01b815260040161036b9493929190610a20565b600060405180830381865afa158015610388573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103ce9190810190610b4f565b9150915060005a905061041c6040518060400160405280600881526020017f6576616c20676173000000000000000000000000000000000000000000000000815250828661030491906109e0565b825161042f90600090602086019061057e565b50600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8a16179055815161048390600290602085019061057e565b50505050505050505050565b61049b8260008361022e565b5050565b6000805481906104b1906001906109e0565b815481106104c1576104c1610ba9565b9060005260206000200154905090565b61049b82826040516024016104e7929190610bd8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc0000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280548282559060005260206000209081019282156105b9579160200282015b828111156105b957825182559160200191906001019061059e565b506105c59291506105c9565b5090565b5b808211156105c557600081556001016105ca565b600081518084526020808501945080840160005b8381101561060e578151875295820195908201906001016105f2565b509495945050505050565b60208152600061062c60208301846105de565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461065557600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106ce576106ce610658565b604052919050565b600067ffffffffffffffff8211156106f0576106f0610658565b5060051b60200190565b600082601f83011261070b57600080fd5b8135602061072061071b836106d6565b610687565b82815260059290921b8401810191818101908684111561073f57600080fd5b8286015b8481101561075a5780358352918301918301610743565b509695505050505050565b600082601f83011261077657600080fd5b8135602061078661071b836106d6565b82815260059290921b840181019181810190868411156107a557600080fd5b8286015b8481101561075a57803567ffffffffffffffff8111156107c95760008081fd5b6107d78986838b01016106fa565b8452509183019183016107a9565b6000806000606084860312156107fa57600080fd5b833561080581610633565b925060208401359150604084013567ffffffffffffffff81111561082857600080fd5b61083486828701610765565b9150509250925092565b60008060006060848603121561085357600080fd5b833561085e81610633565b925060208401359150604084013567ffffffffffffffff81111561088157600080fd5b610834868287016106fa565b600080600080608085870312156108a357600080fd5b84356108ae81610633565b935060208501356108be81610633565b925060408501359150606085013567ffffffffffffffff8111156108e157600080fd5b6108ed87828801610765565b91505092959194509250565b600080600080600060a0868803121561091157600080fd5b853561091c81610633565b9450602086013561092c81610633565b93506040860135925060608601359150608086013567ffffffffffffffff81111561095657600080fd5b61096288828901610765565b9150509295509295909350565b6000806040838503121561098257600080fd5b823561098d81610633565b9150602083013567ffffffffffffffff8111156109a957600080fd5b6109b5858286016106fa565b9150509250929050565b8281526040602082015260006109d860408301846105de565b949350505050565b81810381811115610a1a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60006080820173ffffffffffffffffffffffffffffffffffffffff87168352602086818501528560408501526080606085015281855180845260a08601915060a08160051b87010193508287016000805b83811015610ae3578887037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60018552825180518089529087019087890190845b81811015610acd57835183529289019291890191600101610ab1565b5090985050509385019391850191600101610a71565b50949b9a5050505050505050505050565b600082601f830112610b0557600080fd5b81516020610b1561071b836106d6565b82815260059290921b84018101918181019086841115610b3457600080fd5b8286015b8481101561075a5780518352918301918301610b38565b60008060408385031215610b6257600080fd5b825167ffffffffffffffff80821115610b7a57600080fd5b610b8686838701610af4565b93506020850151915080821115610b9c57600080fd5b506109b585828601610af4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b604081526000835180604084015260005b81811015610c065760208187018101516060868401015201610be9565b5060006060828501015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116840101915050826020830152939250505056fea26469706673582212207b090207620bcc9be1b93a0b19ba2333536e2c65894f9418649184a9e0f285d164736f6c63430008130033";

type IInterpreterV1ConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IInterpreterV1ConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IInterpreterV1Consumer__factory extends ContractFactory {
  constructor(...args: IInterpreterV1ConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IInterpreterV1Consumer> {
    return super.deploy(overrides || {}) as Promise<IInterpreterV1Consumer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IInterpreterV1Consumer {
    return super.attach(address) as IInterpreterV1Consumer;
  }
  override connect(signer: Signer): IInterpreterV1Consumer__factory {
    return super.connect(signer) as IInterpreterV1Consumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IInterpreterV1ConsumerInterface {
    return new utils.Interface(_abi) as IInterpreterV1ConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInterpreterV1Consumer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IInterpreterV1Consumer;
  }
}
