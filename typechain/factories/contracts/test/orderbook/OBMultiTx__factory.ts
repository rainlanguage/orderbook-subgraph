/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OBMultiTx,
  OBMultiTxInterface,
} from "../../../../contracts/test/orderbook/OBMultiTx";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IOrderBookV2",
        name: "OBContract_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OBContract",
    outputs: [
      {
        internalType: "contract IOrderBookV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "vaultId",
                type: "uint256",
              },
            ],
            internalType: "struct IO[]",
            name: "validInputs",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "vaultId",
                type: "uint256",
              },
            ],
            internalType: "struct IO[]",
            name: "validOutputs",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract IExpressionDeployerV1",
                name: "deployer",
                type: "address",
              },
              {
                internalType: "bytes[]",
                name: "sources",
                type: "bytes[]",
              },
              {
                internalType: "uint256[]",
                name: "constants",
                type: "uint256[]",
              },
            ],
            internalType: "struct EvaluableConfig",
            name: "evaluableConfig",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "meta",
            type: "bytes",
          },
        ],
        internalType: "struct OrderConfig[]",
        name: "configs_",
        type: "tuple[]",
      },
    ],
    name: "multiAddOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "bool",
                name: "handleIO",
                type: "bool",
              },
              {
                components: [
                  {
                    internalType: "contract IInterpreterV1",
                    name: "interpreter",
                    type: "address",
                  },
                  {
                    internalType: "contract IInterpreterStoreV1",
                    name: "store",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "expression",
                    type: "address",
                  },
                ],
                internalType: "struct Evaluable",
                name: "evaluable",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "decimals",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "vaultId",
                    type: "uint256",
                  },
                ],
                internalType: "struct IO[]",
                name: "validInputs",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "decimals",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "vaultId",
                    type: "uint256",
                  },
                ],
                internalType: "struct IO[]",
                name: "validOutputs",
                type: "tuple[]",
              },
            ],
            internalType: "struct Order",
            name: "alice_",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "bool",
                name: "handleIO",
                type: "bool",
              },
              {
                components: [
                  {
                    internalType: "contract IInterpreterV1",
                    name: "interpreter",
                    type: "address",
                  },
                  {
                    internalType: "contract IInterpreterStoreV1",
                    name: "store",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "expression",
                    type: "address",
                  },
                ],
                internalType: "struct Evaluable",
                name: "evaluable",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "decimals",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "vaultId",
                    type: "uint256",
                  },
                ],
                internalType: "struct IO[]",
                name: "validInputs",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "decimals",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "vaultId",
                    type: "uint256",
                  },
                ],
                internalType: "struct IO[]",
                name: "validOutputs",
                type: "tuple[]",
              },
            ],
            internalType: "struct Order",
            name: "bob_",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "aliceInputIOIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "aliceOutputIOIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bobInputIOIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bobOutputIOIndex",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "aliceBountyVaultId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "bobBountyVaultId",
                type: "uint256",
              },
            ],
            internalType: "struct ClearConfig",
            name: "clearConfig_",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "signer",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "context",
                type: "uint256[]",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedContextV1[]",
            name: "aliceSignedContext_",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "signer",
                type: "address",
              },
              {
                internalType: "uint256[]",
                name: "context",
                type: "uint256[]",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedContextV1[]",
            name: "bobSignedContext_",
            type: "tuple[]",
          },
        ],
        internalType: "struct MultiClear[]",
        name: "configs_",
        type: "tuple[]",
      },
    ],
    name: "multiClear",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct DepositConfig[]",
        name: "configs_",
        type: "tuple[]",
      },
    ],
    name: "multiDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawConfig[]",
        name: "configs_",
        type: "tuple[]",
      },
    ],
    name: "multiWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516115aa3803806115aa83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516114fd6100ad600039600081816099015281816101170152818161023e015281816102c90152818161036c015261045201526114fd6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634d95bb24116100505780634d95bb24146100945780636c013d81146100e457806392d96819146100f757600080fd5b80630bf695ba1461006c57806317f1e7d114610081575b600080fd5b61007f61007a366004610ae6565b61010a565b005b61007f61008f366004610b6d565b6101db565b6100bb7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61007f6100f2366004610b6d565b610344565b61007f610105366004610ae6565b610409565b60005b818110156101d6577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637027667884848481811061016357610163610ba3565b90506020028101906101759190610bd2565b6040518263ffffffff1660e01b81526004016101919190610eb4565b600060405180830381600087803b1580156101ab57600080fd5b505af11580156101bf573d6000803e3d6000fd5b5050505080806101ce90611042565b91505061010d565b505050565b60005b818110156101d657368383838181106101f9576101f9610ba3565b60600291909101915061023990503330604084013561021b60208601866110a1565b73ffffffffffffffffffffffffffffffffffffffff16929190610516565b61028c7f0000000000000000000000000000000000000000000000000000000000000000604083013561026f60208501856110a1565b73ffffffffffffffffffffffffffffffffffffffff1691906105f8565b6040517fe6b6263600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063e6b62636906102fe9084906004016110fd565b600060405180830381600087803b15801561031857600080fd5b505af115801561032c573d6000803e3d6000fd5b5050505050808061033c90611042565b9150506101de565b60005b818110156101d6573683838381811061036257610362610ba3565b90506060020190507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634f266187826040518263ffffffff1660e01b81526004016103c391906110fd565b600060405180830381600087803b1580156103dd57600080fd5b505af11580156103f1573d6000803e3d6000fd5b5050505050808061040190611042565b915050610347565b60005b818110156101d6573683838381811061042757610427610ba3565b90506020028101906104399190611111565b905073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016639e18968b6104818380611145565b61048e6020850185611145565b604085016104a0610100870187611179565b6104ae610120890189611179565b6040518863ffffffff1660e01b81526004016104d0979695949392919061136f565b600060405180830381600087803b1580156104ea57600080fd5b505af11580156104fe573d6000803e3d6000fd5b5050505050808061050e90611042565b91505061040c565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526105f29085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261077f565b50505050565b80158061069857506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610696919061140a565b155b610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526101d69084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610570565b60006107e1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661088b9092919063ffffffff16565b8051909150156101d657808060200190518101906107ff9190611423565b6101d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610720565b606061089a84846000856108a2565b949350505050565b606082471015610934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610720565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161095d9190611464565b60006040518083038185875af1925050503d806000811461099a576040519150601f19603f3d011682016040523d82523d6000602084013e61099f565b606091505b50915091506109b0878383876109bb565b979650505050505050565b60608315610a51578251600003610a4a5773ffffffffffffffffffffffffffffffffffffffff85163b610a4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610720565b508161089a565b61089a8383815115610a665781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107209190611476565b60008083601f840112610aac57600080fd5b50813567ffffffffffffffff811115610ac457600080fd5b6020830191508360208260051b8501011115610adf57600080fd5b9250929050565b60008060208385031215610af957600080fd5b823567ffffffffffffffff811115610b1057600080fd5b610b1c85828601610a9a565b90969095509350505050565b60008083601f840112610b3a57600080fd5b50813567ffffffffffffffff811115610b5257600080fd5b602083019150836020606083028501011115610adf57600080fd5b60008060208385031215610b8057600080fd5b823567ffffffffffffffff811115610b9757600080fd5b610b1c85828601610b28565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81833603018112610c0657600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610c4557600080fd5b830160208101925035905067ffffffffffffffff811115610c6557600080fd5b606081023603821315610adf57600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610c9957600080fd5b50565b818352600060208085019450826000805b86811015610d0c578235610cc081610c77565b73ffffffffffffffffffffffffffffffffffffffff1688528284013560ff8116808214610ceb578384fd5b89860152506040838101359089015260609788019790920191600101610cad565b50959695505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112610d4c57600080fd5b90910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610d8a57600080fd5b830160208101925035905067ffffffffffffffff811115610daa57600080fd5b8060051b3603821315610adf57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610e3a57600080fd5b830160208101925035905067ffffffffffffffff811115610e5a57600080fd5b803603821315610adf57600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610e9b57600080fd5b8260051b80836020870137939093016020019392505050565b60006020808352610ec58485610c10565b608083860152610ed960a086018284610c9c565b915050610ee882860186610c10565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080878503016040880152610f1e848385610c9c565b9350610f2d6040890189610d18565b9250808785030160608801526060840191508235610f4a81610c77565b73ffffffffffffffffffffffffffffffffffffffff168452610f6e83860184610d55565b6060878701528381855260808701905060808260051b88010194508260005b83811015610fe5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80898803018352610fc68286610e05565b610fd1898284610dbc565b985050509189019190890190600101610f8d565b5050505050610ff76040840184610d55565b95509250838203604085015261100e828685610e69565b945061101d6060890189610e05565b94509250808786030160808801525050611038838383610dbc565b9695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361109a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602082840312156110b357600080fd5b81356110be81610c77565b9392505050565b80356110d081610c77565b73ffffffffffffffffffffffffffffffffffffffff16825260208181013590830152604090810135910152565b6060810161110b82846110c5565b92915050565b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec1833603018112610c0657600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112610c0657600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126111ae57600080fd5b83018035915067ffffffffffffffff8211156111c957600080fd5b6020019150600581901b3603821315610adf57600080fd5b8015158114610c9957600080fd5b600081356111fc81610c77565b73ffffffffffffffffffffffffffffffffffffffff9081168452602083013590611225826111e1565b901515602085015260408301359061123c82610c77565b908116604085015260608301359061125382610c77565b908116606085015260808301359061126a82610c77565b16608084015261127d60a0830183610c10565b60e060a086015261129260e086018284610c9c565b9150506112a260c0840184610c10565b85830360c0870152611038838284610c9c565b818352600060208085019450848460051b86018460005b878110156113625783830389526112e38288610d18565b606081356112f081610c77565b73ffffffffffffffffffffffffffffffffffffffff16855261131482880183610d55565b82898801526113268388018284610e69565b92505050604061133881840184610e05565b93508683038288015261134c838583610dbc565b9c89019c965050509286019250506001016112cc565b5090979650505050505050565b60006101408083526113838184018b6111ef565b90508281036020840152611397818a6111ef565b9050873560408401526020880135606084015260408801356080840152606088013560a0840152608088013560c084015260a088013560e08401528281036101008401526113e68187896112b5565b90508281036101208401526113fc8185876112b5565b9a9950505050505050505050565b60006020828403121561141c57600080fd5b5051919050565b60006020828403121561143557600080fd5b81516110be816111e1565b60005b8381101561145b578181015183820152602001611443565b50506000910152565b60008251610c06818460208701611440565b6020815260008251806020840152611495816040850160208701611440565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea264697066735822122041aa37b6d28e2b236a165b23e042f3933191def8a5f29d12b078c44f2c70035364736f6c63430008130033";

type OBMultiTxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OBMultiTxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OBMultiTx__factory extends ContractFactory {
  constructor(...args: OBMultiTxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    OBContract_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OBMultiTx> {
    return super.deploy(OBContract_, overrides || {}) as Promise<OBMultiTx>;
  }
  override getDeployTransaction(
    OBContract_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(OBContract_, overrides || {});
  }
  override attach(address: string): OBMultiTx {
    return super.attach(address) as OBMultiTx;
  }
  override connect(signer: Signer): OBMultiTx__factory {
    return super.connect(signer) as OBMultiTx__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OBMultiTxInterface {
    return new utils.Interface(_abi) as OBMultiTxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OBMultiTx {
    return new Contract(address, _abi, signerOrProvider) as OBMultiTx;
  }
}
