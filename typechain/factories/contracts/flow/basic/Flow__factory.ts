/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Flow,
  FlowInterface,
  DeployerDiscoverableMetaV1ConstructionConfigStruct,
} from "../../../../contracts/flow/basic/Flow";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "deployer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "meta",
            type: "bytes",
          },
        ],
        internalType: "struct DeployerDiscoverableMetaV1ConstructionConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "flowMinOutputs_",
        type: "uint256",
      },
    ],
    name: "BadMinStackLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "unmeta",
        type: "bytes",
      },
    ],
    name: "NotRainMetaV1",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expectedHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "actualHash",
        type: "bytes32",
      },
    ],
    name: "UnexpectedMetaHash",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "unregisteredHash",
        type: "bytes32",
      },
    ],
    name: "UnregisteredFlow",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedERC1155Flow",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedERC20Flow",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedERC721Flow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[][]",
        name: "context",
        type: "uint256[][]",
      },
    ],
    name: "Context",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IInterpreterV1",
            name: "interpreter",
            type: "address",
          },
          {
            internalType: "contract IInterpreterStoreV1",
            name: "store",
            type: "address",
          },
          {
            internalType: "address",
            name: "expression",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct Evaluable",
        name: "evaluable",
        type: "tuple",
      },
    ],
    name: "FlowInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "contract IExpressionDeployerV1",
                name: "deployer",
                type: "address",
              },
              {
                internalType: "bytes[]",
                name: "sources",
                type: "bytes[]",
              },
              {
                internalType: "uint256[]",
                name: "constants",
                type: "uint256[]",
              },
            ],
            internalType: "struct EvaluableConfig",
            name: "dummyConfig",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IExpressionDeployerV1",
                name: "deployer",
                type: "address",
              },
              {
                internalType: "bytes[]",
                name: "sources",
                type: "bytes[]",
              },
              {
                internalType: "uint256[]",
                name: "constants",
                type: "uint256[]",
              },
            ],
            internalType: "struct EvaluableConfig[]",
            name: "config",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct FlowConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "Initialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subject",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "meta",
        type: "bytes",
      },
    ],
    name: "MetaV1",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IInterpreterV1",
            name: "interpreter",
            type: "address",
          },
          {
            internalType: "contract IInterpreterStoreV1",
            name: "store",
            type: "address",
          },
          {
            internalType: "address",
            name: "expression",
            type: "address",
          },
        ],
        internalType: "struct Evaluable",
        name: "evaluable_",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "callerContext_",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "context",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedContextV1[]",
        name: "signedContexts_",
        type: "tuple[]",
      },
    ],
    name: "flow",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct ERC20Transfer[]",
            name: "erc20",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
            ],
            internalType: "struct ERC721Transfer[]",
            name: "erc721",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct ERC1155Transfer[]",
            name: "erc1155",
            type: "tuple[]",
          },
        ],
        internalType: "struct FlowTransferV1",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IInterpreterV1",
            name: "interpreter",
            type: "address",
          },
          {
            internalType: "contract IInterpreterStoreV1",
            name: "store",
            type: "address",
          },
          {
            internalType: "address",
            name: "expression",
            type: "address",
          },
        ],
        internalType: "struct Evaluable",
        name: "evaluable_",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "callerContext_",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "context",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedContextV1[]",
        name: "signedContexts_",
        type: "tuple[]",
      },
    ],
    name: "previewFlow",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct ERC20Transfer[]",
            name: "erc20",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
            ],
            internalType: "struct ERC721Transfer[]",
            name: "erc721",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct ERC1155Transfer[]",
            name: "erc1155",
            type: "tuple[]",
          },
        ],
        internalType: "struct FlowTransferV1",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200369a3803806200369a8339810160408190526200003491620003af565b7fb6d4201d330adfb5887b1df3cee56bee9dbd54ead31c9628420afac3cdaf28b160001b81818162000071828260200151620000d560201b60201c565b60208101516040517fbea766d03fa1efd3f81cc8634d08320bc62bb0ed9234ac59bbaafa5893fb6b1391620000aa9133913091620004bd565b60405180910390a18051620000bf906200011c565b50620000cc9050620001e0565b5050506200062f565b805160208201208281146200010c5760405163074fe10f60e41b815260048101849052602481018290526044015b60405180910390fd5b62000117826200029f565b505050565b604080516000808252602082019092526001600160a01b03831691635511cb6791906200015a565b6060815260200190600190039081620001445790505b5060408051600080825260208201908152818301928390526001600160e01b031960e086901b16909252620001949291604482016200052c565b6060604051808303816000875af1158015620001b4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001da9190620005bf565b50505050565b600054610100900460ff16156200024a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840162000103565b60005460ff90811610156200029d576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b620002aa81620002cf565b620002cc5780604051630c89984b60e31b815260040162000103919062000613565b50565b6000600882511015620002e457506000919050565b50600801516001600160401b031667ff0a89c674ee78741490565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200033a576200033a620002ff565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200036b576200036b620002ff565b604052919050565b6001600160a01b0381168114620002cc57600080fd5b60005b83811015620003a65781810151838201526020016200038c565b50506000910152565b60006020808385031215620003c357600080fd5b82516001600160401b0380821115620003db57600080fd5b9084019060408287031215620003f057600080fd5b620003fa62000315565b8251620004078162000373565b815282840151828111156200041b57600080fd5b80840193505086601f8401126200043157600080fd5b825182811115620004465762000446620002ff565b6200045a601f8201601f1916860162000340565b925080835287858286010111156200047157600080fd5b620004828186850187870162000389565b5092830152509392505050565b60008151808452620004a981602086016020860162000389565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000620004e660608301846200048f565b95945050505050565b600081518084526020808501945080840160005b83811015620005215781518752958201959082019060010162000503565b509495945050505050565b6000606082016060835280865180835260808501915060808160051b8601019250602080890160005b838110156200058757607f19888703018552620005748683516200048f565b9550938201939082019060010162000555565b5050858403818701525050506200059f8186620004ef565b90508281036040840152620005b58185620004ef565b9695505050505050565b600080600060608486031215620005d557600080fd5b8351620005e28162000373565b6020850151909350620005f58162000373565b6040850151909250620006088162000373565b809150509250925092565b6020815260006200062860208301846200048f565b9392505050565b61305b806200063f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ac9650d81161005b578063ac9650d81461012e578063bc197c811461014e578063f23a6e6114610186578063f83d765a146101be57600080fd5b806301ffc9a71461008d578063150b7a02146100b5578063439fab91146100f957806390bcad691461010e575b600080fd5b6100a061009b366004611fa1565b6101d1565b60405190151581526020015b60405180910390f35b6100c86100c3366004612160565b61026a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100ac565b61010c6101073660046121cc565b610294565b005b61012161011c3660046122cd565b61047e565b6040516100ac9190612505565b61014161013c366004612663565b6104e4565b6040516100ac9190612789565b6100c861015c36600461279c565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b6100c861019436600461284a565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b6101216101cc3660046122cd565b6105d9565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061026457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7f150b7a02000000000000000000000000000000000000000000000000000000005b949350505050565b600054610100900460ff16158080156102b45750600054600160ff909116105b806102ce5750303b1580156102ce575060005460ff166001145b61035f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156103bd57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b60006103cb838501856129a8565b90507f0958255eac6e436f3a69fab24003de5b7bdb73c4432fe988ae98288d24dfd38933826040516103fe929190612b29565b60405180910390a16104158160200151600361068e565b50801561047957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6104a260405180606001604052806060815260200160608152602001606081525090565b60006104c96104c38560408051600181526020810192909252818101905290565b846109b3565b905060006104d78683610ce3565b50925050505b9392505050565b60608167ffffffffffffffff8111156104ff576104ff612008565b60405190808252806020026020018201604052801561053257816020015b606081526020019060019003908161051d5790505b50905060005b828110156105d2576105a23085858481811061055657610556612c04565b90506020028101906105689190612c33565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d3692505050565b8282815181106105b4576105b4612c04565b602002602001018190525080806105ca90612c98565b915050610538565b5092915050565b6105fd60405180606001604052806060815260200160608152602001606081525090565b610605610e75565b60006106266104c38560408051600181526020810192909252818101905290565b90507f17a5c0f3785132a57703932032f6863e7920434150aa1dc940e567b440fdce1f3382604051610659929190612d3f565b60405180910390a160008061066e8784610ce3565b9150915061068182886020015183610ee8565b509150506104dd60018055565b600054610100900460ff16610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610356565b61072d610f92565b610735610f92565b61073d610f92565b600381101561077b576040517fb0682cf300000000000000000000000000000000000000000000000000000000815260048101829052602401610356565b6107b56040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b60408051606081018252600080825260208201819052918101829052905b84518110156109ac578481815181106107ee576107ee612c04565b602002602001015192506000806000856000015173ffffffffffffffffffffffffffffffffffffffff16635511cb67876020015188604001516108438b60408051600181526020810192909252818101905290565b6040518463ffffffff1660e01b815260040161086193929190612d6e565b6060604051808303816000875af1158015610880573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a49190612db1565b92509250925060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152509450600161012d600061091b886060902090565b81526020808201929092526040908101600020929092558151338152875173ffffffffffffffffffffffffffffffffffffffff9081168284015291880151821681840152918701511660608201527fed510090abe2a95b97a621e3d2c947ea3c26eced1c87470474d17e353dcc53389060800160405180910390a150505080806109a490612c98565b9150506107d3565b5050505050565b60606000825167ffffffffffffffff8111156109d1576109d1612008565b6040519080825280602002602001820160405280156109fa578160200160208202803683370190505b509050600080845111610a0e576000610a14565b83516001015b855160010101905060008167ffffffffffffffff811115610a3757610a37612008565b604051908082528060200260200182016040528015610a6a57816020015b6060815260200190600190039081610a555790505b5090506000610a8f604080516002815233602082015230818301526060810190915290565b828281518110610aa157610aa1612c04565b602002602001018190525060005b8751811015610aff578180600101925050878181518110610ad257610ad2612c04565b6020026020010151838381518110610aec57610aec612c04565b6020908102919091010152600101610aaf565b50855115610cd957808060010191505083828281518110610b2257610b22612c04565b602002602001018190525060005b8651811015610cd757610c01878281518110610b4e57610b4e612c04565b602002602001015160000151610bde610b8b8a8581518110610b7257610b72612c04565b6020026020010151602001518051602090810291012090565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b898481518110610bf057610bf0612c04565b60200260200101516040015161102b565b610c3a576040517f52bf984800000000000000000000000000000000000000000000000000000000815260048101829052602401610356565b868181518110610c4c57610c4c612c04565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16858281518110610c8057610c80612c04565b6020026020010181815250508180600101925050868181518110610ca657610ca6612c04565b602002602001015160200151838381518110610cc457610cc4612c04565b6020908102919091010152600101610b30565b505b5095945050505050565b610d0760405180606001604052806060815260200160608152602001606081525090565b60606000806000610d1887876111f8565b925092509250610d288383611339565b9450925050505b9250929050565b606073ffffffffffffffffffffffffffffffffffffffff83163b610ddc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610356565b6000808473ffffffffffffffffffffffffffffffffffffffff1684604051610e049190612dfe565b600060405180830381855af49150503d8060008114610e3f576040519150601f19603f3d011682016040523d82523d6000602084013e610e44565b606091505b5091509150610e6c8282604051806060016040528060278152602001612fff602791396114ca565b95945050505050565b600260015403610ee1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610356565b6002600155565b805115610f77576040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063946aadc690610f44906000908590600401612e1a565b600060405180830381600087803b158015610f5e57600080fd5b505af1158015610f72573d6000803e3d6000fd5b505050505b610f80836114e3565b610f898361163c565b610479836117cd565b600054610100900460ff16611029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610356565b565b600080600061103a858561197d565b9092509050600081600481111561105357611053612e33565b14801561108b57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b1561109b576001925050506104dd565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b88886040516024016110d0929190612e62565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516111599190612dfe565b600060405180830381855afa9150503d8060008114611194576040519150601f19603f3d011682016040523d82523d6000602084013e611199565b606091505b50915091508180156111ac575080516020145b80156111ec575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906111ea9083016020908101908401612e7b565b145b98975050505050505050565b600080606084600061120b826060902090565b600081815261012d602052604081205491925003611258576040517f7a80ba4d00000000000000000000000000000000000000000000000000000000815260048101829052602401610356565b600080886000015173ffffffffffffffffffffffffffffffffffffffff16636715f8258a60200151600061128f8d604001516119bf565b8c6040518563ffffffff1660e01b81526004016112af9493929190612e94565b600060405180830381865afa1580156112cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526113129190810190612f2a565b915091506113208260200190565b8251909a60209182029093010198509650945050505050565b61135d60405180606001604052806060815260200160608152602001606081525090565b61138160405180606001604052806060815260200160608152602001606081525090565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c000000000000000000000000000060209091015260606113e584867ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f60046119e9565b80845260408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c0000000000000000000000000000602090910152909450905061144f84867ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f60046119e9565b602084810182905260408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c000000000000000000000000000091015290945090506114bb84867ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f60056119e9565b60408401525090949350505050565b606083156114d95750816104dd565b6104dd8383611a9b565b6040805160808101825260008082526020820181905291810182905260608101829052905b82515181101561047957825180518290811061152657611526612c04565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff160361159d576040820151606083015183516115989273ffffffffffffffffffffffffffffffffffffffff90911691339190611adf565b611634565b3073ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff1603611602576040820151606083015183516115989273ffffffffffffffffffffffffffffffffffffffff90911691611bc1565b6040517fa521c60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101611508565b6040805160808101825260008082526020820181905291810182905260608101829052905b826020015151811015610479578260200151818151811061168457611684612c04565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16141580156116e85750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b1561171f576040517f3a5befc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516020830151604080850151606086015191517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015260448101919091529116906342842e0e90606401600060405180830381600087803b1580156117a957600080fd5b505af11580156117bd573d6000803e3d6000fd5b5050600190920191506116619050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052905b826040015151811015610479578260400151818151811061181c5761181c612c04565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16141580156118805750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b156118b7576040517fc6a91ecc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301516040808501516060860151608087015192517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff948516600482015291841660248301526044820152606481019190915260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b15801561195957600080fd5b505af115801561196d573d6000803e3d6000fd5b5050600190920191506117f99050565b60008082516041036119b35760208301516040840151606085015160001a6119a787828585611c17565b94509450505050610d2f565b50600090506002610d2f565b6000602082901b77ffffffffffffffffffffffffffffffffffffffff000000001661ffff17610264565b6000606081806119fb88888888611d03565b915091506000858251611a0e9190612f8e565b905060008167ffffffffffffffff811115611a2b57611a2b612008565b604051908082528060200260200182016040528015611a54578160200160208202803683370190505b50905060208101602082510281016020850160208a025b82841015611a855781845260209093019290810190611a6b565b5095975091955050505050505b94509492505050565b815115611aab5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103569190612fc9565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052611bbb9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d63565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526104799084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611b39565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611c4e5750600090506003611a92565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ca2573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611cf657600060019250925050611a92565b9660009650945050505050565b600060608085611d1257600080fd5b6000806020860260208a039950602089035b808b1115611d4a578a518903611d3c578a9350611d4a565b998190039991870191611d24565b505081611d5657600080fd5b8152969795505050505050565b6000611dc5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e6f9092919063ffffffff16565b8051909150156104795780806020019051810190611de39190612fdc565b610479576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610356565b606061028c8484600085856000808673ffffffffffffffffffffffffffffffffffffffff168587604051611ea39190612dfe565b60006040518083038185875af1925050503d8060008114611ee0576040519150601f19603f3d011682016040523d82523d6000602084013e611ee5565b606091505b5091509150611ef687838387611f01565b979650505050505050565b60608315611f97578251600003611f905773ffffffffffffffffffffffffffffffffffffffff85163b611f90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610356565b508161028c565b61028c8383611a9b565b600060208284031215611fb357600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146104dd57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461200557600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561205a5761205a612008565b60405290565b6040805190810167ffffffffffffffff8111828210171561205a5761205a612008565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156120ca576120ca612008565b604052919050565b600082601f8301126120e357600080fd5b813567ffffffffffffffff8111156120fd576120fd612008565b61212e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612083565b81815284602083860101111561214357600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561217657600080fd5b843561218181611fe3565b9350602085013561219181611fe3565b925060408501359150606085013567ffffffffffffffff8111156121b457600080fd5b6121c0878288016120d2565b91505092959194509250565b600080602083850312156121df57600080fd5b823567ffffffffffffffff808211156121f757600080fd5b818501915085601f83011261220b57600080fd5b81358181111561221a57600080fd5b86602082850101111561222c57600080fd5b60209290920196919550909350505050565b600067ffffffffffffffff82111561225857612258612008565b5060051b60200190565b600082601f83011261227357600080fd5b813560206122886122838361223e565b612083565b82815260059290921b840181019181810190868411156122a757600080fd5b8286015b848110156122c257803583529183019183016122ab565b509695505050505050565b600080600083850360a08112156122e357600080fd5b60608112156122f157600080fd5b506122fa612037565b843561230581611fe3565b815260208581013561231681611fe3565b82820152604086013561232881611fe3565b604083015290935060608501359067ffffffffffffffff8083111561234c57600080fd5b61235888848901612262565b9450608087013592508083111561236e57600080fd5b828701925087601f84011261238257600080fd5b82356123906122838261223e565b81815260059190911b8401830190838101908a8311156123af57600080fd5b8486015b83811015612472578035858111156123cb5760008081fd5b87016060818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156124005760008081fd5b612408612037565b8782013561241581611fe3565b815260408201358781111561242a5760008081fd5b6124388f8a83860101612262565b89830152506060820135878111156124505760008081fd5b61245e8f8a838601016120d2565b6040830152508452509185019185016123b3565b508096505050505050509250925092565b600081518084526020808501945080840160005b838110156124fa578151805173ffffffffffffffffffffffffffffffffffffffff9081168952848201518116858a015260408083015190911690890152606080820151908901526080908101519088015260a09096019590820190600101612497565b509495945050505050565b600060208083526080808401855160608487015281815180845260a0880191508583019350600092505b808310156125935761257f82855173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b92850192600192909201919084019061252f565b50848801517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0888303810160408a01528151808452918701945092506000918601905b8083101561263a5761262682865173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b9386019360019290920191908501906125d6565b5060408901519550828882030160608901526126568187612483565b9998505050505050505050565b6000806020838503121561267657600080fd5b823567ffffffffffffffff8082111561268e57600080fd5b818501915085601f8301126126a257600080fd5b8135818111156126b157600080fd5b8660208260051b850101111561222c57600080fd5b60005b838110156126e15781810151838201526020016126c9565b50506000910152565b600081518084526127028160208601602086016126c6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b8581101561277c57828403895261276a8483516126ea565b98850198935090840190600101612752565b5091979650505050505050565b6020815260006104dd6020830184612734565b600080600080600060a086880312156127b457600080fd5b85356127bf81611fe3565b945060208601356127cf81611fe3565b9350604086013567ffffffffffffffff808211156127ec57600080fd5b6127f889838a01612262565b9450606088013591508082111561280e57600080fd5b61281a89838a01612262565b9350608088013591508082111561283057600080fd5b5061283d888289016120d2565b9150509295509295909350565b600080600080600060a0868803121561286257600080fd5b853561286d81611fe3565b9450602086013561287d81611fe3565b93506040860135925060608601359150608086013567ffffffffffffffff8111156128a757600080fd5b61283d888289016120d2565b6000606082840312156128c557600080fd5b6128cd612037565b905081356128da81611fe3565b815260208281013567ffffffffffffffff808211156128f857600080fd5b818501915085601f83011261290c57600080fd5b813561291a6122838261223e565b81815260059190911b8301840190848101908883111561293957600080fd5b8585015b83811015612971578035858111156129555760008081fd5b6129638b89838a01016120d2565b84525091860191860161293d565b508086880152505050604085013592508083111561298e57600080fd5b505061299c84828501612262565b60408301525092915050565b600060208083850312156129bb57600080fd5b823567ffffffffffffffff808211156129d357600080fd5b90840190604082870312156129e757600080fd5b6129ef612060565b8235828111156129fe57600080fd5b612a0a888286016128b3565b8252508383013582811115612a1e57600080fd5b80840193505086601f840112612a3357600080fd5b8235612a416122838261223e565b81815260059190911b84018501908581019089831115612a6057600080fd5b8686015b83811015612a9857803586811115612a7c5760008081fd5b612a8a8c8a838b01016128b3565b845250918701918701612a64565b5095830195909552509695505050505050565b600081518084526020808501945080840160005b838110156124fa57815187529582019590820190600101612abf565b73ffffffffffffffffffffffffffffffffffffffff81511682526000602082015160606020850152612b106060850182612734565b905060408301518482036040860152610e6c8282612aab565b73ffffffffffffffffffffffffffffffffffffffff83168152600060206040818401528351604080850152612b616080850182612adb565b858301518582037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0016060870152805180835291925083019083830190600581901b8401850160005b82811015612bf6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868303018452612be4828651612adb565b94870194938701939150600101612baa565b509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c6857600080fd5b83018035915067ffffffffffffffff821115612c8357600080fd5b602001915036819003821315610d2f57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cf0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600081518084526020808501808196508360051b8101915082860160005b8581101561277c578284038952612d2d848351612aab565b98850198935090840190600101612d15565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600061028c6040830184612cf7565b606081526000612d816060830186612734565b8281036020840152612d938186612aab565b90508281036040840152612da78185612aab565b9695505050505050565b600080600060608486031215612dc657600080fd5b8351612dd181611fe3565b6020850151909350612de281611fe3565b6040850151909250612df381611fe3565b809150509250925092565b60008251612e108184602087016126c6565b9190910192915050565b82815260406020820152600061028c6040830184612aab565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82815260406020820152600061028c60408301846126ea565b600060208284031215612e8d57600080fd5b5051919050565b73ffffffffffffffffffffffffffffffffffffffff85168152836020820152826040820152608060608201526000612da76080830184612cf7565b600082601f830112612ee057600080fd5b81516020612ef06122838361223e565b82815260059290921b84018101918181019086841115612f0f57600080fd5b8286015b848110156122c25780518352918301918301612f13565b60008060408385031215612f3d57600080fd5b825167ffffffffffffffff80821115612f5557600080fd5b612f6186838701612ecf565b93506020850151915080821115612f7757600080fd5b50612f8485828601612ecf565b9150509250929050565b600082612fc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6020815260006104dd60208301846126ea565b600060208284031215612fee57600080fd5b815180151581146104dd57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a583dd5ae451c71ab2e1442bc0866be51cc6c53a22d582eb584ee951ae65c15864736f6c63430008130033";

type FlowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Flow__factory extends ContractFactory {
  constructor(...args: FlowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    config_: DeployerDiscoverableMetaV1ConstructionConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Flow> {
    return super.deploy(config_, overrides || {}) as Promise<Flow>;
  }
  override getDeployTransaction(
    config_: DeployerDiscoverableMetaV1ConstructionConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(config_, overrides || {});
  }
  override attach(address: string): Flow {
    return super.attach(address) as Flow;
  }
  override connect(signer: Signer): Flow__factory {
    return super.connect(signer) as Flow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlowInterface {
    return new utils.Interface(_abi) as FlowInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Flow {
    return new Contract(address, _abi, signerOrProvider) as Flow;
  }
}
