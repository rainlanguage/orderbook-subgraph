/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export interface IInterpreterV1ConsumerInterface extends utils.Interface {
  functions: {
    "eval(address,uint256,uint256[][])": FunctionFragment;
    "eval(address,address,uint256,uint256[][])": FunctionFragment;
    "evalWithNamespace(address,address,uint256,uint256,uint256[][])": FunctionFragment;
    "kvs()": FunctionFragment;
    "set(address,uint256,uint256[])": FunctionFragment;
    "set(address,uint256[])": FunctionFragment;
    "stack()": FunctionFragment;
    "stackTop()": FunctionFragment;
    "store()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "eval(address,uint256,uint256[][])"
      | "eval(address,address,uint256,uint256[][])"
      | "evalWithNamespace"
      | "kvs"
      | "set(address,uint256,uint256[])"
      | "set(address,uint256[])"
      | "stack"
      | "stackTop"
      | "store"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "eval(address,uint256,uint256[][])",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[][]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "eval(address,address,uint256,uint256[][])",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[][]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "evalWithNamespace",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[][]
    ]
  ): string;
  encodeFunctionData(functionFragment: "kvs", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "set(address,uint256,uint256[])",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "set(address,uint256[])",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(functionFragment: "stack", values?: undefined): string;
  encodeFunctionData(functionFragment: "stackTop", values?: undefined): string;
  encodeFunctionData(functionFragment: "store", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "eval(address,uint256,uint256[][])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "eval(address,address,uint256,uint256[][])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "evalWithNamespace",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "kvs", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "set(address,uint256,uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set(address,uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "stack", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "stackTop", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "store", data: BytesLike): Result;

  events: {};
}

export interface IInterpreterV1Consumer extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IInterpreterV1ConsumerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    "eval(address,uint256,uint256[][])"(
      interpreter_: PromiseOrValue<string>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "eval(address,address,uint256,uint256[][])"(
      interpreter_: PromiseOrValue<string>,
      store_: PromiseOrValue<string>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    evalWithNamespace(
      interpreter_: PromiseOrValue<string>,
      store_: PromiseOrValue<string>,
      namespace_: PromiseOrValue<BigNumberish>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    kvs(overrides?: CallOverrides): Promise<[BigNumber[]]>;

    "set(address,uint256,uint256[])"(
      store_: PromiseOrValue<string>,
      namespace_: PromiseOrValue<BigNumberish>,
      kvs_: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "set(address,uint256[])"(
      store_: PromiseOrValue<string>,
      kvs_: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    stack(overrides?: CallOverrides): Promise<[BigNumber[]]>;

    stackTop(overrides?: CallOverrides): Promise<[BigNumber]>;

    store(overrides?: CallOverrides): Promise<[string]>;
  };

  "eval(address,uint256,uint256[][])"(
    interpreter_: PromiseOrValue<string>,
    dispatch_: PromiseOrValue<BigNumberish>,
    context_: PromiseOrValue<BigNumberish>[][],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "eval(address,address,uint256,uint256[][])"(
    interpreter_: PromiseOrValue<string>,
    store_: PromiseOrValue<string>,
    dispatch_: PromiseOrValue<BigNumberish>,
    context_: PromiseOrValue<BigNumberish>[][],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  evalWithNamespace(
    interpreter_: PromiseOrValue<string>,
    store_: PromiseOrValue<string>,
    namespace_: PromiseOrValue<BigNumberish>,
    dispatch_: PromiseOrValue<BigNumberish>,
    context_: PromiseOrValue<BigNumberish>[][],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  kvs(overrides?: CallOverrides): Promise<BigNumber[]>;

  "set(address,uint256,uint256[])"(
    store_: PromiseOrValue<string>,
    namespace_: PromiseOrValue<BigNumberish>,
    kvs_: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "set(address,uint256[])"(
    store_: PromiseOrValue<string>,
    kvs_: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  stack(overrides?: CallOverrides): Promise<BigNumber[]>;

  stackTop(overrides?: CallOverrides): Promise<BigNumber>;

  store(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    "eval(address,uint256,uint256[][])"(
      interpreter_: PromiseOrValue<string>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: CallOverrides
    ): Promise<void>;

    "eval(address,address,uint256,uint256[][])"(
      interpreter_: PromiseOrValue<string>,
      store_: PromiseOrValue<string>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: CallOverrides
    ): Promise<void>;

    evalWithNamespace(
      interpreter_: PromiseOrValue<string>,
      store_: PromiseOrValue<string>,
      namespace_: PromiseOrValue<BigNumberish>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: CallOverrides
    ): Promise<void>;

    kvs(overrides?: CallOverrides): Promise<BigNumber[]>;

    "set(address,uint256,uint256[])"(
      store_: PromiseOrValue<string>,
      namespace_: PromiseOrValue<BigNumberish>,
      kvs_: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "set(address,uint256[])"(
      store_: PromiseOrValue<string>,
      kvs_: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    stack(overrides?: CallOverrides): Promise<BigNumber[]>;

    stackTop(overrides?: CallOverrides): Promise<BigNumber>;

    store(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    "eval(address,uint256,uint256[][])"(
      interpreter_: PromiseOrValue<string>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "eval(address,address,uint256,uint256[][])"(
      interpreter_: PromiseOrValue<string>,
      store_: PromiseOrValue<string>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    evalWithNamespace(
      interpreter_: PromiseOrValue<string>,
      store_: PromiseOrValue<string>,
      namespace_: PromiseOrValue<BigNumberish>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    kvs(overrides?: CallOverrides): Promise<BigNumber>;

    "set(address,uint256,uint256[])"(
      store_: PromiseOrValue<string>,
      namespace_: PromiseOrValue<BigNumberish>,
      kvs_: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "set(address,uint256[])"(
      store_: PromiseOrValue<string>,
      kvs_: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    stack(overrides?: CallOverrides): Promise<BigNumber>;

    stackTop(overrides?: CallOverrides): Promise<BigNumber>;

    store(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    "eval(address,uint256,uint256[][])"(
      interpreter_: PromiseOrValue<string>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "eval(address,address,uint256,uint256[][])"(
      interpreter_: PromiseOrValue<string>,
      store_: PromiseOrValue<string>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    evalWithNamespace(
      interpreter_: PromiseOrValue<string>,
      store_: PromiseOrValue<string>,
      namespace_: PromiseOrValue<BigNumberish>,
      dispatch_: PromiseOrValue<BigNumberish>,
      context_: PromiseOrValue<BigNumberish>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    kvs(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "set(address,uint256,uint256[])"(
      store_: PromiseOrValue<string>,
      namespace_: PromiseOrValue<BigNumberish>,
      kvs_: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "set(address,uint256[])"(
      store_: PromiseOrValue<string>,
      kvs_: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    stack(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    stackTop(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    store(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
